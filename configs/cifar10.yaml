model:
  name: "TinyCNN-CIFAR10"
  architecture: "tinycnn"
  weights_path: "./weights"
  input_height: 32
  input_width: 32
  input_channels: 3
  num_classes: 10
  class_names:
    - "airplane"
    - "automobile" 
    - "bird"
    - "cat"
    - "deer"
    - "dog"
    - "frog"
    - "horse"
    - "ship"
    - "truck"
  layers:
    - name: "conv1"
      type: "convolution"
      kernel_size: 3
      filters: 32
      stride: 1
      padding: 1
      apply_batch_norm: true
      apply_activation: true
    - name: "conv2"
      type: "convolution"
      kernel_size: 3
      filters: 32
      stride: 1
      padding: 1
      apply_batch_norm: true
      apply_activation: true
    - name: "maxpool1"
      type: "max_pooling"
      pool_size: 2
      pool_stride: 2
    - name: "conv3"
      type: "convolution"
      kernel_size: 3
      filters: 64
      stride: 1
      padding: 1
      apply_batch_norm: true
      apply_activation: true
    - name: "conv4"
      type: "convolution"
      kernel_size: 3
      filters: 64
      stride: 1
      padding: 1
      apply_batch_norm: true
      apply_activation: true
    - name: "maxpool2"
      type: "max_pooling"
      pool_size: 2
      pool_stride: 2
    - name: "conv5"
      type: "convolution"
      kernel_size: 3
      filters: 128
      stride: 1
      padding: 1
      apply_batch_norm: true
      apply_activation: true
    - name: "conv6"
      type: "convolution"
      kernel_size: 3
      filters: 128
      stride: 1
      padding: 1
      apply_batch_norm: true
      apply_activation: true
    - name: "maxpool3"
      type: "max_pooling"
      pool_size: 2
      pool_stride: 2
    - name: "conv7"
      type: "convolution"
      kernel_size: 1
      filters: 10
      stride: 1
      padding: 0
      apply_batch_norm: false
      apply_activation: false
    - name: "global_maxpool"
      type: "global_max_pooling"
    - name: "softmax"
      type: "softmax"

data:
  format: "binary"           # binary or text
  precision: "float32"       # float32 or float64
  normalize: true
  mean_values: [0.485, 0.456, 0.406]  # ImageNet means (RGB)
  std_values: [0.229, 0.224, 0.225]   # ImageNet stds (RGB)

inference:
  batch_size: 1
  use_parallel: true
  num_workers: 4
  output_format: "json"      # json, csv, or text
  save_results: false
  output_path: "./results/"

benchmark:
  test_data_path: "./testdata/images/"
  test_label_path: "./testdata/labels.txt"
  num_samples: 1000          # -1 for all samples
  report_top_k: 5            # Report top-K accuracy
  save_confusion: true       # Save confusion matrix
  profile_enabled: false     # Enable CPU profiling
  tolerance: 1e-6            # Numerical comparison tolerance